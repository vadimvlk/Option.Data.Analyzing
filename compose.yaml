version: '3.8'

services:
  postgres:
    container_name: postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: 9wV8u7fxGyAhENL93
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Persisting database data
    networks:
      - share-network

  scheduler:
    container_name: scheduler
    image: vadimvlk/private:scheduler
    restart: always
    volumes:
      - /var/deribit/appsettings.json:/app/appsettings.json
    networks:
      - share-network
  web:
    container_name: web
    image: vadimvlk/private:web
    restart: always
    volumes:
      - /var/deribit/appsettings.json:/app/appsettings.json
    networks:
      - share-network
    environment:
      - ASPNETCORE_URLS=http://+:80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`fesscode.ru`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.tls.certresolver=letsencrypt"
      - "traefik.http.services.web.loadbalancer.server.port=80"  # Add this line
    depends_on:
      - postgres
  
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: always
    ports:
      - "5443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/deribit/traefik/letsencrypt:/letsencrypt  # Для SSL-сертификатов
      - /var/deribit/traefik.yml:/traefik.yml:ro       # Конфиг Traefik
    labels:
      - "traefik.http.middlewares.forwardedheaders.headers.forwardedHeaders.trustedIPs=127.0.0.1/32,172.0.0.0/8"
    networks:
      - share-network
    command:
      - "--log.level=DEBUG"
networks:
  share-network:
    driver: bridge

volumes:
  postgres_data:  # Volume to persist PostgresSQL data.
